#BlueJ class context
comment0.target=InputValidatorTest
comment1.params=
comment1.target=void\ testNameFieldIsNotEmpty()
comment1.text=\n\ Example\ test\ method\ for\ a\ possible\ Name\ field\ validator\ method\ in\ your\ \n\ InputValidator\ class.\n\ For\ more\ information\ about\ assertion\ tests\ check\:\ \n\ https\://www.tutorialspoint.com/junit/junit_using_assertion.htm\n
comment10.params=
comment10.target=void\ shortPasswordTest()
comment11.params=
comment11.target=void\ noNumPasswordTest()
comment12.params=
comment12.target=void\ lowCasePasswordTest()
comment13.params=
comment13.target=void\ upCasePasswordTest()
comment14.params=
comment14.target=void\ testValidEmail()
comment15.params=
comment15.target=void\ testEmailMissingDomain()
comment16.params=
comment16.target=void\ testEmailDoubleAt()
comment17.params=
comment17.target=void\ testEmailEmpty()
comment18.params=
comment18.target=void\ testUsername()
comment19.params=
comment19.target=void\ testUsernameTooLong()
comment2.params=
comment2.target=void\ testNameTooShort()
comment20.params=
comment20.target=void\ testUsernameIsEmpty()
comment21.params=
comment21.target=void\ testUsernameWithDot()
comment22.params=
comment22.target=void\ testUsernameIsUnique()
comment23.params=
comment23.target=void\ testPhoneNumberValidation()
comment24.params=
comment24.target=void\ testDateOfBirthValidation()
comment25.params=
comment25.target=void\ testPostalCodeValidation()
comment26.params=
comment26.target=void\ testCreationDateValidation()
comment27.params=
comment27.target=void\ testValidCreationDate()
comment28.params=
comment28.target=void\ testInvalidCreationDateFormat()
comment29.params=
comment29.target=void\ testEmptyCreationDate()
comment3.params=
comment3.target=void\ testNameContainNumbers()
comment30.params=
comment30.target=void\ testNullCreationDate()
comment31.params=
comment31.target=void\ testValidDescription()
comment32.params=
comment32.target=void\ testEmptyDescription()
comment32.text=\n\ Tests\ that\ an\ empty\ string\ is\ considered\ invalid\ as\ a\ description.\n
comment33.params=
comment33.target=void\ testNullDescription()
comment33.text=\n\ Tests\ that\ a\ null\ input\ is\ considered\ invalid\ as\ a\ description.\n
comment34.params=
comment34.target=void\ testTooLongDescription()
comment34.text=\n\ Tests\ that\ a\ description\ longer\ than\ 1000\ characters\ is\ considered\ invalid.\n
comment35.params=
comment35.target=void\ testValidMedium()
comment35.text=\n\ Tests\ that\ a\ valid\ medium\ from\ the\ allowed\ list\ returns\ true.\n
comment36.params=
comment36.target=void\ testInvalidMedium()
comment36.text=\n\ Tests\ that\ a\ medium\ not\ in\ the\ allowed\ list\ returns\ false.\n
comment37.params=
comment37.target=void\ testEmptyMedium()
comment37.text=\n\ Tests\ that\ an\ empty\ string\ is\ not\ valid\ for\ medium.\n
comment38.params=
comment38.target=void\ testNullMedium()
comment38.text=\n\ Tests\ that\ a\ null\ input\ is\ not\ valid\ for\ medium.\n
comment39.params=
comment39.target=void\ testCaseInsensitiveMedium()
comment39.text=\n\ Tests\ that\ capitalization\ of\ valid\ mediums\ is\ ignored\ (case-insensitive\ check).\n
comment4.params=
comment4.target=void\ testNameWithDiacritics()
comment40.params=
comment40.target=void\ testValidUSPrice()
comment40.text=\n\ Tests\ that\ a\ valid\ US\ dollar\ format\ price\ is\ accepted.\n
comment41.params=
comment41.target=void\ testValidEuroPrice()
comment41.text=\n\ Tests\ that\ a\ valid\ Euro\ currency\ price\ is\ accepted.\n
comment42.params=
comment42.target=void\ testValidBitcoinPrice()
comment42.text=\n\ Tests\ that\ a\ valid\ Bitcoin\ format\ price\ is\ accepted.\n
comment43.params=
comment43.target=void\ testEmptyPrice()
comment43.text=\n\ Tests\ that\ an\ empty\ price\ input\ is\ valid\ (because\ price\ is\ optional).\n
comment44.params=
comment44.target=void\ testInvalidPriceFormat()
comment44.text=\n\ Tests\ that\ price\ without\ a\ currency\ symbol\ is\ considered\ invalid.\n
comment45.params=
comment45.target=void\ testInvalidPriceLetters()
comment45.text=\n\ Tests\ that\ a\ non-numeric\ price\ is\ considered\ invalid.\n
comment5.params=
comment5.target=void\ testValidLastName()
comment6.params=
comment6.target=void\ testValidLastNameShort()
comment7.params=
comment7.target=void\ testLastNameStartEndWithDash()
comment8.params=
comment8.target=void\ testLastNameWithNumbers()
comment9.params=
comment9.target=void\ passwordTest()
numComments=46
